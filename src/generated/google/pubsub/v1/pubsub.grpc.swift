//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/pubsub/v1/pubsub.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Dispatch
import Foundation
import SwiftGRPC
import SwiftProtobuf

internal protocol Google_Pubsub_V1_PublisherCreateTopicCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_PublisherCreateTopicCallBase: ClientCallUnaryBase<Google_Pubsub_V1_Topic, Google_Pubsub_V1_Topic>, Google_Pubsub_V1_PublisherCreateTopicCall {
  override class var method: String { return "/google.pubsub.v1.Publisher/CreateTopic" }
}

internal protocol Google_Pubsub_V1_PublisherUpdateTopicCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_PublisherUpdateTopicCallBase: ClientCallUnaryBase<Google_Pubsub_V1_UpdateTopicRequest, Google_Pubsub_V1_Topic>, Google_Pubsub_V1_PublisherUpdateTopicCall {
  override class var method: String { return "/google.pubsub.v1.Publisher/UpdateTopic" }
}

internal protocol Google_Pubsub_V1_PublisherPublishCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_PublisherPublishCallBase: ClientCallUnaryBase<Google_Pubsub_V1_PublishRequest, Google_Pubsub_V1_PublishResponse>, Google_Pubsub_V1_PublisherPublishCall {
  override class var method: String { return "/google.pubsub.v1.Publisher/Publish" }
}

internal protocol Google_Pubsub_V1_PublisherGetTopicCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_PublisherGetTopicCallBase: ClientCallUnaryBase<Google_Pubsub_V1_GetTopicRequest, Google_Pubsub_V1_Topic>, Google_Pubsub_V1_PublisherGetTopicCall {
  override class var method: String { return "/google.pubsub.v1.Publisher/GetTopic" }
}

internal protocol Google_Pubsub_V1_PublisherListTopicsCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_PublisherListTopicsCallBase: ClientCallUnaryBase<Google_Pubsub_V1_ListTopicsRequest, Google_Pubsub_V1_ListTopicsResponse>, Google_Pubsub_V1_PublisherListTopicsCall {
  override class var method: String { return "/google.pubsub.v1.Publisher/ListTopics" }
}

internal protocol Google_Pubsub_V1_PublisherListTopicSubscriptionsCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_PublisherListTopicSubscriptionsCallBase: ClientCallUnaryBase<Google_Pubsub_V1_ListTopicSubscriptionsRequest, Google_Pubsub_V1_ListTopicSubscriptionsResponse>, Google_Pubsub_V1_PublisherListTopicSubscriptionsCall {
  override class var method: String { return "/google.pubsub.v1.Publisher/ListTopicSubscriptions" }
}

internal protocol Google_Pubsub_V1_PublisherListTopicSnapshotsCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_PublisherListTopicSnapshotsCallBase: ClientCallUnaryBase<Google_Pubsub_V1_ListTopicSnapshotsRequest, Google_Pubsub_V1_ListTopicSnapshotsResponse>, Google_Pubsub_V1_PublisherListTopicSnapshotsCall {
  override class var method: String { return "/google.pubsub.v1.Publisher/ListTopicSnapshots" }
}

internal protocol Google_Pubsub_V1_PublisherDeleteTopicCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_PublisherDeleteTopicCallBase: ClientCallUnaryBase<Google_Pubsub_V1_DeleteTopicRequest, SwiftProtobuf.Google_Protobuf_Empty>, Google_Pubsub_V1_PublisherDeleteTopicCall {
  override class var method: String { return "/google.pubsub.v1.Publisher/DeleteTopic" }
}


/// Instantiate Google_Pubsub_V1_PublisherServiceClient, then call methods of this protocol to make API calls.
internal protocol Google_Pubsub_V1_PublisherService: ServiceClient {
  /// Synchronous. Unary.
  func createTopic(_ request: Google_Pubsub_V1_Topic, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_Topic
  /// Asynchronous. Unary.
  @discardableResult
  func createTopic(_ request: Google_Pubsub_V1_Topic, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_Topic?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherCreateTopicCall

  /// Synchronous. Unary.
  func updateTopic(_ request: Google_Pubsub_V1_UpdateTopicRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_Topic
  /// Asynchronous. Unary.
  @discardableResult
  func updateTopic(_ request: Google_Pubsub_V1_UpdateTopicRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_Topic?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherUpdateTopicCall

  /// Synchronous. Unary.
  func publish(_ request: Google_Pubsub_V1_PublishRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_PublishResponse
  /// Asynchronous. Unary.
  @discardableResult
  func publish(_ request: Google_Pubsub_V1_PublishRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_PublishResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherPublishCall

  /// Synchronous. Unary.
  func getTopic(_ request: Google_Pubsub_V1_GetTopicRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_Topic
  /// Asynchronous. Unary.
  @discardableResult
  func getTopic(_ request: Google_Pubsub_V1_GetTopicRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_Topic?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherGetTopicCall

  /// Synchronous. Unary.
  func listTopics(_ request: Google_Pubsub_V1_ListTopicsRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_ListTopicsResponse
  /// Asynchronous. Unary.
  @discardableResult
  func listTopics(_ request: Google_Pubsub_V1_ListTopicsRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_ListTopicsResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherListTopicsCall

  /// Synchronous. Unary.
  func listTopicSubscriptions(_ request: Google_Pubsub_V1_ListTopicSubscriptionsRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_ListTopicSubscriptionsResponse
  /// Asynchronous. Unary.
  @discardableResult
  func listTopicSubscriptions(_ request: Google_Pubsub_V1_ListTopicSubscriptionsRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_ListTopicSubscriptionsResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherListTopicSubscriptionsCall

  /// Synchronous. Unary.
  func listTopicSnapshots(_ request: Google_Pubsub_V1_ListTopicSnapshotsRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_ListTopicSnapshotsResponse
  /// Asynchronous. Unary.
  @discardableResult
  func listTopicSnapshots(_ request: Google_Pubsub_V1_ListTopicSnapshotsRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_ListTopicSnapshotsResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherListTopicSnapshotsCall

  /// Synchronous. Unary.
  func deleteTopic(_ request: Google_Pubsub_V1_DeleteTopicRequest, metadata customMetadata: Metadata) throws -> SwiftProtobuf.Google_Protobuf_Empty
  /// Asynchronous. Unary.
  @discardableResult
  func deleteTopic(_ request: Google_Pubsub_V1_DeleteTopicRequest, metadata customMetadata: Metadata, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherDeleteTopicCall

}

internal extension Google_Pubsub_V1_PublisherService {
  /// Synchronous. Unary.
  func createTopic(_ request: Google_Pubsub_V1_Topic) throws -> Google_Pubsub_V1_Topic {
    return try self.createTopic(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func createTopic(_ request: Google_Pubsub_V1_Topic, completion: @escaping (Google_Pubsub_V1_Topic?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherCreateTopicCall {
    return try self.createTopic(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func updateTopic(_ request: Google_Pubsub_V1_UpdateTopicRequest) throws -> Google_Pubsub_V1_Topic {
    return try self.updateTopic(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func updateTopic(_ request: Google_Pubsub_V1_UpdateTopicRequest, completion: @escaping (Google_Pubsub_V1_Topic?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherUpdateTopicCall {
    return try self.updateTopic(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func publish(_ request: Google_Pubsub_V1_PublishRequest) throws -> Google_Pubsub_V1_PublishResponse {
    return try self.publish(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func publish(_ request: Google_Pubsub_V1_PublishRequest, completion: @escaping (Google_Pubsub_V1_PublishResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherPublishCall {
    return try self.publish(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getTopic(_ request: Google_Pubsub_V1_GetTopicRequest) throws -> Google_Pubsub_V1_Topic {
    return try self.getTopic(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getTopic(_ request: Google_Pubsub_V1_GetTopicRequest, completion: @escaping (Google_Pubsub_V1_Topic?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherGetTopicCall {
    return try self.getTopic(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func listTopics(_ request: Google_Pubsub_V1_ListTopicsRequest) throws -> Google_Pubsub_V1_ListTopicsResponse {
    return try self.listTopics(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func listTopics(_ request: Google_Pubsub_V1_ListTopicsRequest, completion: @escaping (Google_Pubsub_V1_ListTopicsResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherListTopicsCall {
    return try self.listTopics(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func listTopicSubscriptions(_ request: Google_Pubsub_V1_ListTopicSubscriptionsRequest) throws -> Google_Pubsub_V1_ListTopicSubscriptionsResponse {
    return try self.listTopicSubscriptions(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func listTopicSubscriptions(_ request: Google_Pubsub_V1_ListTopicSubscriptionsRequest, completion: @escaping (Google_Pubsub_V1_ListTopicSubscriptionsResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherListTopicSubscriptionsCall {
    return try self.listTopicSubscriptions(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func listTopicSnapshots(_ request: Google_Pubsub_V1_ListTopicSnapshotsRequest) throws -> Google_Pubsub_V1_ListTopicSnapshotsResponse {
    return try self.listTopicSnapshots(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func listTopicSnapshots(_ request: Google_Pubsub_V1_ListTopicSnapshotsRequest, completion: @escaping (Google_Pubsub_V1_ListTopicSnapshotsResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherListTopicSnapshotsCall {
    return try self.listTopicSnapshots(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func deleteTopic(_ request: Google_Pubsub_V1_DeleteTopicRequest) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try self.deleteTopic(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func deleteTopic(_ request: Google_Pubsub_V1_DeleteTopicRequest, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherDeleteTopicCall {
    return try self.deleteTopic(request, metadata: self.metadata, completion: completion)
  }

}

internal final class Google_Pubsub_V1_PublisherServiceClient: ServiceClientBase, Google_Pubsub_V1_PublisherService {
  /// Synchronous. Unary.
  internal func createTopic(_ request: Google_Pubsub_V1_Topic, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_Topic {
    return try Google_Pubsub_V1_PublisherCreateTopicCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func createTopic(_ request: Google_Pubsub_V1_Topic, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_Topic?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherCreateTopicCall {
    return try Google_Pubsub_V1_PublisherCreateTopicCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func updateTopic(_ request: Google_Pubsub_V1_UpdateTopicRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_Topic {
    return try Google_Pubsub_V1_PublisherUpdateTopicCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func updateTopic(_ request: Google_Pubsub_V1_UpdateTopicRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_Topic?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherUpdateTopicCall {
    return try Google_Pubsub_V1_PublisherUpdateTopicCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func publish(_ request: Google_Pubsub_V1_PublishRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_PublishResponse {
    return try Google_Pubsub_V1_PublisherPublishCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func publish(_ request: Google_Pubsub_V1_PublishRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_PublishResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherPublishCall {
    return try Google_Pubsub_V1_PublisherPublishCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getTopic(_ request: Google_Pubsub_V1_GetTopicRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_Topic {
    return try Google_Pubsub_V1_PublisherGetTopicCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getTopic(_ request: Google_Pubsub_V1_GetTopicRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_Topic?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherGetTopicCall {
    return try Google_Pubsub_V1_PublisherGetTopicCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func listTopics(_ request: Google_Pubsub_V1_ListTopicsRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_ListTopicsResponse {
    return try Google_Pubsub_V1_PublisherListTopicsCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func listTopics(_ request: Google_Pubsub_V1_ListTopicsRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_ListTopicsResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherListTopicsCall {
    return try Google_Pubsub_V1_PublisherListTopicsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func listTopicSubscriptions(_ request: Google_Pubsub_V1_ListTopicSubscriptionsRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_ListTopicSubscriptionsResponse {
    return try Google_Pubsub_V1_PublisherListTopicSubscriptionsCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func listTopicSubscriptions(_ request: Google_Pubsub_V1_ListTopicSubscriptionsRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_ListTopicSubscriptionsResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherListTopicSubscriptionsCall {
    return try Google_Pubsub_V1_PublisherListTopicSubscriptionsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func listTopicSnapshots(_ request: Google_Pubsub_V1_ListTopicSnapshotsRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_ListTopicSnapshotsResponse {
    return try Google_Pubsub_V1_PublisherListTopicSnapshotsCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func listTopicSnapshots(_ request: Google_Pubsub_V1_ListTopicSnapshotsRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_ListTopicSnapshotsResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherListTopicSnapshotsCall {
    return try Google_Pubsub_V1_PublisherListTopicSnapshotsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func deleteTopic(_ request: Google_Pubsub_V1_DeleteTopicRequest, metadata customMetadata: Metadata) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try Google_Pubsub_V1_PublisherDeleteTopicCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func deleteTopic(_ request: Google_Pubsub_V1_DeleteTopicRequest, metadata customMetadata: Metadata, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Google_Pubsub_V1_PublisherDeleteTopicCall {
    return try Google_Pubsub_V1_PublisherDeleteTopicCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
internal protocol Google_Pubsub_V1_SubscriberCreateSubscriptionCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberCreateSubscriptionCallBase: ClientCallUnaryBase<Google_Pubsub_V1_Subscription, Google_Pubsub_V1_Subscription>, Google_Pubsub_V1_SubscriberCreateSubscriptionCall {
  override class var method: String { return "/google.pubsub.v1.Subscriber/CreateSubscription" }
}

internal protocol Google_Pubsub_V1_SubscriberGetSubscriptionCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberGetSubscriptionCallBase: ClientCallUnaryBase<Google_Pubsub_V1_GetSubscriptionRequest, Google_Pubsub_V1_Subscription>, Google_Pubsub_V1_SubscriberGetSubscriptionCall {
  override class var method: String { return "/google.pubsub.v1.Subscriber/GetSubscription" }
}

internal protocol Google_Pubsub_V1_SubscriberUpdateSubscriptionCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberUpdateSubscriptionCallBase: ClientCallUnaryBase<Google_Pubsub_V1_UpdateSubscriptionRequest, Google_Pubsub_V1_Subscription>, Google_Pubsub_V1_SubscriberUpdateSubscriptionCall {
  override class var method: String { return "/google.pubsub.v1.Subscriber/UpdateSubscription" }
}

internal protocol Google_Pubsub_V1_SubscriberListSubscriptionsCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberListSubscriptionsCallBase: ClientCallUnaryBase<Google_Pubsub_V1_ListSubscriptionsRequest, Google_Pubsub_V1_ListSubscriptionsResponse>, Google_Pubsub_V1_SubscriberListSubscriptionsCall {
  override class var method: String { return "/google.pubsub.v1.Subscriber/ListSubscriptions" }
}

internal protocol Google_Pubsub_V1_SubscriberDeleteSubscriptionCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberDeleteSubscriptionCallBase: ClientCallUnaryBase<Google_Pubsub_V1_DeleteSubscriptionRequest, SwiftProtobuf.Google_Protobuf_Empty>, Google_Pubsub_V1_SubscriberDeleteSubscriptionCall {
  override class var method: String { return "/google.pubsub.v1.Subscriber/DeleteSubscription" }
}

internal protocol Google_Pubsub_V1_SubscriberModifyAckDeadlineCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberModifyAckDeadlineCallBase: ClientCallUnaryBase<Google_Pubsub_V1_ModifyAckDeadlineRequest, SwiftProtobuf.Google_Protobuf_Empty>, Google_Pubsub_V1_SubscriberModifyAckDeadlineCall {
  override class var method: String { return "/google.pubsub.v1.Subscriber/ModifyAckDeadline" }
}

internal protocol Google_Pubsub_V1_SubscriberAcknowledgeCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberAcknowledgeCallBase: ClientCallUnaryBase<Google_Pubsub_V1_AcknowledgeRequest, SwiftProtobuf.Google_Protobuf_Empty>, Google_Pubsub_V1_SubscriberAcknowledgeCall {
  override class var method: String { return "/google.pubsub.v1.Subscriber/Acknowledge" }
}

internal protocol Google_Pubsub_V1_SubscriberPullCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberPullCallBase: ClientCallUnaryBase<Google_Pubsub_V1_PullRequest, Google_Pubsub_V1_PullResponse>, Google_Pubsub_V1_SubscriberPullCall {
  override class var method: String { return "/google.pubsub.v1.Subscriber/Pull" }
}

internal protocol Google_Pubsub_V1_SubscriberStreamingPullCall: ClientCallBidirectionalStreaming {
  /// Do not call this directly, call `receive()` in the protocol extension below instead.
  func _receive(timeout: DispatchTime) throws -> Google_Pubsub_V1_StreamingPullResponse?
  /// Call this to wait for a result. Nonblocking.
  func receive(completion: @escaping (ResultOrRPCError<Google_Pubsub_V1_StreamingPullResponse?>) -> Void) throws

  /// Send a message to the stream. Nonblocking.
  func send(_ message: Google_Pubsub_V1_StreamingPullRequest, completion: @escaping (Error?) -> Void) throws
  /// Do not call this directly, call `send()` in the protocol extension below instead.
  func _send(_ message: Google_Pubsub_V1_StreamingPullRequest, timeout: DispatchTime) throws

  /// Call this to close the sending connection. Blocking.
  func closeSend() throws
  /// Call this to close the sending connection. Nonblocking.
  func closeSend(completion: (() -> Void)?) throws
}

internal extension Google_Pubsub_V1_SubscriberStreamingPullCall {
  /// Call this to wait for a result. Blocking.
  func receive(timeout: DispatchTime = .distantFuture) throws -> Google_Pubsub_V1_StreamingPullResponse? { return try self._receive(timeout: timeout) }
}

internal extension Google_Pubsub_V1_SubscriberStreamingPullCall {
  /// Send a message to the stream and wait for the send operation to finish. Blocking.
  func send(_ message: Google_Pubsub_V1_StreamingPullRequest, timeout: DispatchTime = .distantFuture) throws { try self._send(message, timeout: timeout) }
}

fileprivate final class Google_Pubsub_V1_SubscriberStreamingPullCallBase: ClientCallBidirectionalStreamingBase<Google_Pubsub_V1_StreamingPullRequest, Google_Pubsub_V1_StreamingPullResponse>, Google_Pubsub_V1_SubscriberStreamingPullCall {
  override class var method: String { return "/google.pubsub.v1.Subscriber/StreamingPull" }
}

internal protocol Google_Pubsub_V1_SubscriberModifyPushConfigCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberModifyPushConfigCallBase: ClientCallUnaryBase<Google_Pubsub_V1_ModifyPushConfigRequest, SwiftProtobuf.Google_Protobuf_Empty>, Google_Pubsub_V1_SubscriberModifyPushConfigCall {
  override class var method: String { return "/google.pubsub.v1.Subscriber/ModifyPushConfig" }
}

internal protocol Google_Pubsub_V1_SubscriberGetSnapshotCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberGetSnapshotCallBase: ClientCallUnaryBase<Google_Pubsub_V1_GetSnapshotRequest, Google_Pubsub_V1_Snapshot>, Google_Pubsub_V1_SubscriberGetSnapshotCall {
  override class var method: String { return "/google.pubsub.v1.Subscriber/GetSnapshot" }
}

internal protocol Google_Pubsub_V1_SubscriberListSnapshotsCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberListSnapshotsCallBase: ClientCallUnaryBase<Google_Pubsub_V1_ListSnapshotsRequest, Google_Pubsub_V1_ListSnapshotsResponse>, Google_Pubsub_V1_SubscriberListSnapshotsCall {
  override class var method: String { return "/google.pubsub.v1.Subscriber/ListSnapshots" }
}

internal protocol Google_Pubsub_V1_SubscriberCreateSnapshotCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberCreateSnapshotCallBase: ClientCallUnaryBase<Google_Pubsub_V1_CreateSnapshotRequest, Google_Pubsub_V1_Snapshot>, Google_Pubsub_V1_SubscriberCreateSnapshotCall {
  override class var method: String { return "/google.pubsub.v1.Subscriber/CreateSnapshot" }
}

internal protocol Google_Pubsub_V1_SubscriberUpdateSnapshotCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberUpdateSnapshotCallBase: ClientCallUnaryBase<Google_Pubsub_V1_UpdateSnapshotRequest, Google_Pubsub_V1_Snapshot>, Google_Pubsub_V1_SubscriberUpdateSnapshotCall {
  override class var method: String { return "/google.pubsub.v1.Subscriber/UpdateSnapshot" }
}

internal protocol Google_Pubsub_V1_SubscriberDeleteSnapshotCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberDeleteSnapshotCallBase: ClientCallUnaryBase<Google_Pubsub_V1_DeleteSnapshotRequest, SwiftProtobuf.Google_Protobuf_Empty>, Google_Pubsub_V1_SubscriberDeleteSnapshotCall {
  override class var method: String { return "/google.pubsub.v1.Subscriber/DeleteSnapshot" }
}

internal protocol Google_Pubsub_V1_SubscriberSeekCall: ClientCallUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberSeekCallBase: ClientCallUnaryBase<Google_Pubsub_V1_SeekRequest, Google_Pubsub_V1_SeekResponse>, Google_Pubsub_V1_SubscriberSeekCall {
  override class var method: String { return "/google.pubsub.v1.Subscriber/Seek" }
}


/// Instantiate Google_Pubsub_V1_SubscriberServiceClient, then call methods of this protocol to make API calls.
internal protocol Google_Pubsub_V1_SubscriberService: ServiceClient {
  /// Synchronous. Unary.
  func createSubscription(_ request: Google_Pubsub_V1_Subscription, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_Subscription
  /// Asynchronous. Unary.
  @discardableResult
  func createSubscription(_ request: Google_Pubsub_V1_Subscription, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_Subscription?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberCreateSubscriptionCall

  /// Synchronous. Unary.
  func getSubscription(_ request: Google_Pubsub_V1_GetSubscriptionRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_Subscription
  /// Asynchronous. Unary.
  @discardableResult
  func getSubscription(_ request: Google_Pubsub_V1_GetSubscriptionRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_Subscription?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberGetSubscriptionCall

  /// Synchronous. Unary.
  func updateSubscription(_ request: Google_Pubsub_V1_UpdateSubscriptionRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_Subscription
  /// Asynchronous. Unary.
  @discardableResult
  func updateSubscription(_ request: Google_Pubsub_V1_UpdateSubscriptionRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_Subscription?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberUpdateSubscriptionCall

  /// Synchronous. Unary.
  func listSubscriptions(_ request: Google_Pubsub_V1_ListSubscriptionsRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_ListSubscriptionsResponse
  /// Asynchronous. Unary.
  @discardableResult
  func listSubscriptions(_ request: Google_Pubsub_V1_ListSubscriptionsRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_ListSubscriptionsResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberListSubscriptionsCall

  /// Synchronous. Unary.
  func deleteSubscription(_ request: Google_Pubsub_V1_DeleteSubscriptionRequest, metadata customMetadata: Metadata) throws -> SwiftProtobuf.Google_Protobuf_Empty
  /// Asynchronous. Unary.
  @discardableResult
  func deleteSubscription(_ request: Google_Pubsub_V1_DeleteSubscriptionRequest, metadata customMetadata: Metadata, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberDeleteSubscriptionCall

  /// Synchronous. Unary.
  func modifyAckDeadline(_ request: Google_Pubsub_V1_ModifyAckDeadlineRequest, metadata customMetadata: Metadata) throws -> SwiftProtobuf.Google_Protobuf_Empty
  /// Asynchronous. Unary.
  @discardableResult
  func modifyAckDeadline(_ request: Google_Pubsub_V1_ModifyAckDeadlineRequest, metadata customMetadata: Metadata, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberModifyAckDeadlineCall

  /// Synchronous. Unary.
  func acknowledge(_ request: Google_Pubsub_V1_AcknowledgeRequest, metadata customMetadata: Metadata) throws -> SwiftProtobuf.Google_Protobuf_Empty
  /// Asynchronous. Unary.
  @discardableResult
  func acknowledge(_ request: Google_Pubsub_V1_AcknowledgeRequest, metadata customMetadata: Metadata, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberAcknowledgeCall

  /// Synchronous. Unary.
  func pull(_ request: Google_Pubsub_V1_PullRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_PullResponse
  /// Asynchronous. Unary.
  @discardableResult
  func pull(_ request: Google_Pubsub_V1_PullRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_PullResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberPullCall

  /// Asynchronous. Bidirectional-streaming.
  /// Use methods on the returned object to stream messages,
  /// to wait for replies, and to close the connection.
  func streamingPull(metadata customMetadata: Metadata, completion: ((CallResult) -> Void)?) throws -> Google_Pubsub_V1_SubscriberStreamingPullCall

  /// Synchronous. Unary.
  func modifyPushConfig(_ request: Google_Pubsub_V1_ModifyPushConfigRequest, metadata customMetadata: Metadata) throws -> SwiftProtobuf.Google_Protobuf_Empty
  /// Asynchronous. Unary.
  @discardableResult
  func modifyPushConfig(_ request: Google_Pubsub_V1_ModifyPushConfigRequest, metadata customMetadata: Metadata, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberModifyPushConfigCall

  /// Synchronous. Unary.
  func getSnapshot(_ request: Google_Pubsub_V1_GetSnapshotRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_Snapshot
  /// Asynchronous. Unary.
  @discardableResult
  func getSnapshot(_ request: Google_Pubsub_V1_GetSnapshotRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_Snapshot?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberGetSnapshotCall

  /// Synchronous. Unary.
  func listSnapshots(_ request: Google_Pubsub_V1_ListSnapshotsRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_ListSnapshotsResponse
  /// Asynchronous. Unary.
  @discardableResult
  func listSnapshots(_ request: Google_Pubsub_V1_ListSnapshotsRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_ListSnapshotsResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberListSnapshotsCall

  /// Synchronous. Unary.
  func createSnapshot(_ request: Google_Pubsub_V1_CreateSnapshotRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_Snapshot
  /// Asynchronous. Unary.
  @discardableResult
  func createSnapshot(_ request: Google_Pubsub_V1_CreateSnapshotRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_Snapshot?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberCreateSnapshotCall

  /// Synchronous. Unary.
  func updateSnapshot(_ request: Google_Pubsub_V1_UpdateSnapshotRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_Snapshot
  /// Asynchronous. Unary.
  @discardableResult
  func updateSnapshot(_ request: Google_Pubsub_V1_UpdateSnapshotRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_Snapshot?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberUpdateSnapshotCall

  /// Synchronous. Unary.
  func deleteSnapshot(_ request: Google_Pubsub_V1_DeleteSnapshotRequest, metadata customMetadata: Metadata) throws -> SwiftProtobuf.Google_Protobuf_Empty
  /// Asynchronous. Unary.
  @discardableResult
  func deleteSnapshot(_ request: Google_Pubsub_V1_DeleteSnapshotRequest, metadata customMetadata: Metadata, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberDeleteSnapshotCall

  /// Synchronous. Unary.
  func seek(_ request: Google_Pubsub_V1_SeekRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_SeekResponse
  /// Asynchronous. Unary.
  @discardableResult
  func seek(_ request: Google_Pubsub_V1_SeekRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_SeekResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberSeekCall

}

internal extension Google_Pubsub_V1_SubscriberService {
  /// Synchronous. Unary.
  func createSubscription(_ request: Google_Pubsub_V1_Subscription) throws -> Google_Pubsub_V1_Subscription {
    return try self.createSubscription(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func createSubscription(_ request: Google_Pubsub_V1_Subscription, completion: @escaping (Google_Pubsub_V1_Subscription?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberCreateSubscriptionCall {
    return try self.createSubscription(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getSubscription(_ request: Google_Pubsub_V1_GetSubscriptionRequest) throws -> Google_Pubsub_V1_Subscription {
    return try self.getSubscription(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getSubscription(_ request: Google_Pubsub_V1_GetSubscriptionRequest, completion: @escaping (Google_Pubsub_V1_Subscription?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberGetSubscriptionCall {
    return try self.getSubscription(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func updateSubscription(_ request: Google_Pubsub_V1_UpdateSubscriptionRequest) throws -> Google_Pubsub_V1_Subscription {
    return try self.updateSubscription(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func updateSubscription(_ request: Google_Pubsub_V1_UpdateSubscriptionRequest, completion: @escaping (Google_Pubsub_V1_Subscription?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberUpdateSubscriptionCall {
    return try self.updateSubscription(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func listSubscriptions(_ request: Google_Pubsub_V1_ListSubscriptionsRequest) throws -> Google_Pubsub_V1_ListSubscriptionsResponse {
    return try self.listSubscriptions(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func listSubscriptions(_ request: Google_Pubsub_V1_ListSubscriptionsRequest, completion: @escaping (Google_Pubsub_V1_ListSubscriptionsResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberListSubscriptionsCall {
    return try self.listSubscriptions(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func deleteSubscription(_ request: Google_Pubsub_V1_DeleteSubscriptionRequest) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try self.deleteSubscription(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func deleteSubscription(_ request: Google_Pubsub_V1_DeleteSubscriptionRequest, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberDeleteSubscriptionCall {
    return try self.deleteSubscription(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func modifyAckDeadline(_ request: Google_Pubsub_V1_ModifyAckDeadlineRequest) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try self.modifyAckDeadline(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func modifyAckDeadline(_ request: Google_Pubsub_V1_ModifyAckDeadlineRequest, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberModifyAckDeadlineCall {
    return try self.modifyAckDeadline(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func acknowledge(_ request: Google_Pubsub_V1_AcknowledgeRequest) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try self.acknowledge(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func acknowledge(_ request: Google_Pubsub_V1_AcknowledgeRequest, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberAcknowledgeCall {
    return try self.acknowledge(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func pull(_ request: Google_Pubsub_V1_PullRequest) throws -> Google_Pubsub_V1_PullResponse {
    return try self.pull(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func pull(_ request: Google_Pubsub_V1_PullRequest, completion: @escaping (Google_Pubsub_V1_PullResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberPullCall {
    return try self.pull(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Bidirectional-streaming.
  func streamingPull(completion: ((CallResult) -> Void)?) throws -> Google_Pubsub_V1_SubscriberStreamingPullCall {
    return try self.streamingPull(metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func modifyPushConfig(_ request: Google_Pubsub_V1_ModifyPushConfigRequest) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try self.modifyPushConfig(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func modifyPushConfig(_ request: Google_Pubsub_V1_ModifyPushConfigRequest, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberModifyPushConfigCall {
    return try self.modifyPushConfig(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getSnapshot(_ request: Google_Pubsub_V1_GetSnapshotRequest) throws -> Google_Pubsub_V1_Snapshot {
    return try self.getSnapshot(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getSnapshot(_ request: Google_Pubsub_V1_GetSnapshotRequest, completion: @escaping (Google_Pubsub_V1_Snapshot?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberGetSnapshotCall {
    return try self.getSnapshot(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func listSnapshots(_ request: Google_Pubsub_V1_ListSnapshotsRequest) throws -> Google_Pubsub_V1_ListSnapshotsResponse {
    return try self.listSnapshots(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func listSnapshots(_ request: Google_Pubsub_V1_ListSnapshotsRequest, completion: @escaping (Google_Pubsub_V1_ListSnapshotsResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberListSnapshotsCall {
    return try self.listSnapshots(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func createSnapshot(_ request: Google_Pubsub_V1_CreateSnapshotRequest) throws -> Google_Pubsub_V1_Snapshot {
    return try self.createSnapshot(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func createSnapshot(_ request: Google_Pubsub_V1_CreateSnapshotRequest, completion: @escaping (Google_Pubsub_V1_Snapshot?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberCreateSnapshotCall {
    return try self.createSnapshot(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func updateSnapshot(_ request: Google_Pubsub_V1_UpdateSnapshotRequest) throws -> Google_Pubsub_V1_Snapshot {
    return try self.updateSnapshot(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func updateSnapshot(_ request: Google_Pubsub_V1_UpdateSnapshotRequest, completion: @escaping (Google_Pubsub_V1_Snapshot?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberUpdateSnapshotCall {
    return try self.updateSnapshot(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func deleteSnapshot(_ request: Google_Pubsub_V1_DeleteSnapshotRequest) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try self.deleteSnapshot(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func deleteSnapshot(_ request: Google_Pubsub_V1_DeleteSnapshotRequest, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberDeleteSnapshotCall {
    return try self.deleteSnapshot(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func seek(_ request: Google_Pubsub_V1_SeekRequest) throws -> Google_Pubsub_V1_SeekResponse {
    return try self.seek(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func seek(_ request: Google_Pubsub_V1_SeekRequest, completion: @escaping (Google_Pubsub_V1_SeekResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberSeekCall {
    return try self.seek(request, metadata: self.metadata, completion: completion)
  }

}

internal final class Google_Pubsub_V1_SubscriberServiceClient: ServiceClientBase, Google_Pubsub_V1_SubscriberService {
  /// Synchronous. Unary.
  internal func createSubscription(_ request: Google_Pubsub_V1_Subscription, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_Subscription {
    return try Google_Pubsub_V1_SubscriberCreateSubscriptionCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func createSubscription(_ request: Google_Pubsub_V1_Subscription, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_Subscription?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberCreateSubscriptionCall {
    return try Google_Pubsub_V1_SubscriberCreateSubscriptionCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getSubscription(_ request: Google_Pubsub_V1_GetSubscriptionRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_Subscription {
    return try Google_Pubsub_V1_SubscriberGetSubscriptionCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getSubscription(_ request: Google_Pubsub_V1_GetSubscriptionRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_Subscription?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberGetSubscriptionCall {
    return try Google_Pubsub_V1_SubscriberGetSubscriptionCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func updateSubscription(_ request: Google_Pubsub_V1_UpdateSubscriptionRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_Subscription {
    return try Google_Pubsub_V1_SubscriberUpdateSubscriptionCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func updateSubscription(_ request: Google_Pubsub_V1_UpdateSubscriptionRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_Subscription?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberUpdateSubscriptionCall {
    return try Google_Pubsub_V1_SubscriberUpdateSubscriptionCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func listSubscriptions(_ request: Google_Pubsub_V1_ListSubscriptionsRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_ListSubscriptionsResponse {
    return try Google_Pubsub_V1_SubscriberListSubscriptionsCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func listSubscriptions(_ request: Google_Pubsub_V1_ListSubscriptionsRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_ListSubscriptionsResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberListSubscriptionsCall {
    return try Google_Pubsub_V1_SubscriberListSubscriptionsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func deleteSubscription(_ request: Google_Pubsub_V1_DeleteSubscriptionRequest, metadata customMetadata: Metadata) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try Google_Pubsub_V1_SubscriberDeleteSubscriptionCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func deleteSubscription(_ request: Google_Pubsub_V1_DeleteSubscriptionRequest, metadata customMetadata: Metadata, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberDeleteSubscriptionCall {
    return try Google_Pubsub_V1_SubscriberDeleteSubscriptionCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func modifyAckDeadline(_ request: Google_Pubsub_V1_ModifyAckDeadlineRequest, metadata customMetadata: Metadata) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try Google_Pubsub_V1_SubscriberModifyAckDeadlineCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func modifyAckDeadline(_ request: Google_Pubsub_V1_ModifyAckDeadlineRequest, metadata customMetadata: Metadata, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberModifyAckDeadlineCall {
    return try Google_Pubsub_V1_SubscriberModifyAckDeadlineCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func acknowledge(_ request: Google_Pubsub_V1_AcknowledgeRequest, metadata customMetadata: Metadata) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try Google_Pubsub_V1_SubscriberAcknowledgeCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func acknowledge(_ request: Google_Pubsub_V1_AcknowledgeRequest, metadata customMetadata: Metadata, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberAcknowledgeCall {
    return try Google_Pubsub_V1_SubscriberAcknowledgeCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func pull(_ request: Google_Pubsub_V1_PullRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_PullResponse {
    return try Google_Pubsub_V1_SubscriberPullCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func pull(_ request: Google_Pubsub_V1_PullRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_PullResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberPullCall {
    return try Google_Pubsub_V1_SubscriberPullCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Bidirectional-streaming.
  /// Use methods on the returned object to stream messages,
  /// to wait for replies, and to close the connection.
  internal func streamingPull(metadata customMetadata: Metadata, completion: ((CallResult) -> Void)?) throws -> Google_Pubsub_V1_SubscriberStreamingPullCall {
    return try Google_Pubsub_V1_SubscriberStreamingPullCallBase(channel)
      .start(metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func modifyPushConfig(_ request: Google_Pubsub_V1_ModifyPushConfigRequest, metadata customMetadata: Metadata) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try Google_Pubsub_V1_SubscriberModifyPushConfigCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func modifyPushConfig(_ request: Google_Pubsub_V1_ModifyPushConfigRequest, metadata customMetadata: Metadata, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberModifyPushConfigCall {
    return try Google_Pubsub_V1_SubscriberModifyPushConfigCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getSnapshot(_ request: Google_Pubsub_V1_GetSnapshotRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_Snapshot {
    return try Google_Pubsub_V1_SubscriberGetSnapshotCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getSnapshot(_ request: Google_Pubsub_V1_GetSnapshotRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_Snapshot?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberGetSnapshotCall {
    return try Google_Pubsub_V1_SubscriberGetSnapshotCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func listSnapshots(_ request: Google_Pubsub_V1_ListSnapshotsRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_ListSnapshotsResponse {
    return try Google_Pubsub_V1_SubscriberListSnapshotsCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func listSnapshots(_ request: Google_Pubsub_V1_ListSnapshotsRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_ListSnapshotsResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberListSnapshotsCall {
    return try Google_Pubsub_V1_SubscriberListSnapshotsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func createSnapshot(_ request: Google_Pubsub_V1_CreateSnapshotRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_Snapshot {
    return try Google_Pubsub_V1_SubscriberCreateSnapshotCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func createSnapshot(_ request: Google_Pubsub_V1_CreateSnapshotRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_Snapshot?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberCreateSnapshotCall {
    return try Google_Pubsub_V1_SubscriberCreateSnapshotCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func updateSnapshot(_ request: Google_Pubsub_V1_UpdateSnapshotRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_Snapshot {
    return try Google_Pubsub_V1_SubscriberUpdateSnapshotCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func updateSnapshot(_ request: Google_Pubsub_V1_UpdateSnapshotRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_Snapshot?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberUpdateSnapshotCall {
    return try Google_Pubsub_V1_SubscriberUpdateSnapshotCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func deleteSnapshot(_ request: Google_Pubsub_V1_DeleteSnapshotRequest, metadata customMetadata: Metadata) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try Google_Pubsub_V1_SubscriberDeleteSnapshotCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func deleteSnapshot(_ request: Google_Pubsub_V1_DeleteSnapshotRequest, metadata customMetadata: Metadata, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberDeleteSnapshotCall {
    return try Google_Pubsub_V1_SubscriberDeleteSnapshotCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func seek(_ request: Google_Pubsub_V1_SeekRequest, metadata customMetadata: Metadata) throws -> Google_Pubsub_V1_SeekResponse {
    return try Google_Pubsub_V1_SubscriberSeekCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func seek(_ request: Google_Pubsub_V1_SeekRequest, metadata customMetadata: Metadata, completion: @escaping (Google_Pubsub_V1_SeekResponse?, CallResult) -> Void) throws -> Google_Pubsub_V1_SubscriberSeekCall {
    return try Google_Pubsub_V1_SubscriberSeekCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}

/// To build a server, implement a class that conforms to this protocol.
/// If one of the methods returning `ServerStatus?` returns nil,
/// it is expected that you have already returned a status to the client by means of `session.close`.
internal protocol Google_Pubsub_V1_PublisherProvider: ServiceProvider {
  func createTopic(request: Google_Pubsub_V1_Topic, session: Google_Pubsub_V1_PublisherCreateTopicSession) throws -> Google_Pubsub_V1_Topic
  func updateTopic(request: Google_Pubsub_V1_UpdateTopicRequest, session: Google_Pubsub_V1_PublisherUpdateTopicSession) throws -> Google_Pubsub_V1_Topic
  func publish(request: Google_Pubsub_V1_PublishRequest, session: Google_Pubsub_V1_PublisherPublishSession) throws -> Google_Pubsub_V1_PublishResponse
  func getTopic(request: Google_Pubsub_V1_GetTopicRequest, session: Google_Pubsub_V1_PublisherGetTopicSession) throws -> Google_Pubsub_V1_Topic
  func listTopics(request: Google_Pubsub_V1_ListTopicsRequest, session: Google_Pubsub_V1_PublisherListTopicsSession) throws -> Google_Pubsub_V1_ListTopicsResponse
  func listTopicSubscriptions(request: Google_Pubsub_V1_ListTopicSubscriptionsRequest, session: Google_Pubsub_V1_PublisherListTopicSubscriptionsSession) throws -> Google_Pubsub_V1_ListTopicSubscriptionsResponse
  func listTopicSnapshots(request: Google_Pubsub_V1_ListTopicSnapshotsRequest, session: Google_Pubsub_V1_PublisherListTopicSnapshotsSession) throws -> Google_Pubsub_V1_ListTopicSnapshotsResponse
  func deleteTopic(request: Google_Pubsub_V1_DeleteTopicRequest, session: Google_Pubsub_V1_PublisherDeleteTopicSession) throws -> SwiftProtobuf.Google_Protobuf_Empty
}

extension Google_Pubsub_V1_PublisherProvider {
  internal var serviceName: String { return "google.pubsub.v1.Publisher" }

  /// Determines and calls the appropriate request handler, depending on the request's method.
  /// Throws `HandleMethodError.unknownMethod` for methods not handled by this service.
  internal func handleMethod(_ method: String, handler: Handler) throws -> ServerStatus? {
    switch method {
    case "/google.pubsub.v1.Publisher/CreateTopic":
      return try Google_Pubsub_V1_PublisherCreateTopicSessionBase(
        handler: handler,
        providerBlock: { try self.createTopic(request: $0, session: $1 as! Google_Pubsub_V1_PublisherCreateTopicSessionBase) })
          .run()
    case "/google.pubsub.v1.Publisher/UpdateTopic":
      return try Google_Pubsub_V1_PublisherUpdateTopicSessionBase(
        handler: handler,
        providerBlock: { try self.updateTopic(request: $0, session: $1 as! Google_Pubsub_V1_PublisherUpdateTopicSessionBase) })
          .run()
    case "/google.pubsub.v1.Publisher/Publish":
      return try Google_Pubsub_V1_PublisherPublishSessionBase(
        handler: handler,
        providerBlock: { try self.publish(request: $0, session: $1 as! Google_Pubsub_V1_PublisherPublishSessionBase) })
          .run()
    case "/google.pubsub.v1.Publisher/GetTopic":
      return try Google_Pubsub_V1_PublisherGetTopicSessionBase(
        handler: handler,
        providerBlock: { try self.getTopic(request: $0, session: $1 as! Google_Pubsub_V1_PublisherGetTopicSessionBase) })
          .run()
    case "/google.pubsub.v1.Publisher/ListTopics":
      return try Google_Pubsub_V1_PublisherListTopicsSessionBase(
        handler: handler,
        providerBlock: { try self.listTopics(request: $0, session: $1 as! Google_Pubsub_V1_PublisherListTopicsSessionBase) })
          .run()
    case "/google.pubsub.v1.Publisher/ListTopicSubscriptions":
      return try Google_Pubsub_V1_PublisherListTopicSubscriptionsSessionBase(
        handler: handler,
        providerBlock: { try self.listTopicSubscriptions(request: $0, session: $1 as! Google_Pubsub_V1_PublisherListTopicSubscriptionsSessionBase) })
          .run()
    case "/google.pubsub.v1.Publisher/ListTopicSnapshots":
      return try Google_Pubsub_V1_PublisherListTopicSnapshotsSessionBase(
        handler: handler,
        providerBlock: { try self.listTopicSnapshots(request: $0, session: $1 as! Google_Pubsub_V1_PublisherListTopicSnapshotsSessionBase) })
          .run()
    case "/google.pubsub.v1.Publisher/DeleteTopic":
      return try Google_Pubsub_V1_PublisherDeleteTopicSessionBase(
        handler: handler,
        providerBlock: { try self.deleteTopic(request: $0, session: $1 as! Google_Pubsub_V1_PublisherDeleteTopicSessionBase) })
          .run()
    default:
      throw HandleMethodError.unknownMethod
    }
  }
}

internal protocol Google_Pubsub_V1_PublisherCreateTopicSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_PublisherCreateTopicSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_Topic, Google_Pubsub_V1_Topic>, Google_Pubsub_V1_PublisherCreateTopicSession {}

internal protocol Google_Pubsub_V1_PublisherUpdateTopicSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_PublisherUpdateTopicSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_UpdateTopicRequest, Google_Pubsub_V1_Topic>, Google_Pubsub_V1_PublisherUpdateTopicSession {}

internal protocol Google_Pubsub_V1_PublisherPublishSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_PublisherPublishSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_PublishRequest, Google_Pubsub_V1_PublishResponse>, Google_Pubsub_V1_PublisherPublishSession {}

internal protocol Google_Pubsub_V1_PublisherGetTopicSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_PublisherGetTopicSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_GetTopicRequest, Google_Pubsub_V1_Topic>, Google_Pubsub_V1_PublisherGetTopicSession {}

internal protocol Google_Pubsub_V1_PublisherListTopicsSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_PublisherListTopicsSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_ListTopicsRequest, Google_Pubsub_V1_ListTopicsResponse>, Google_Pubsub_V1_PublisherListTopicsSession {}

internal protocol Google_Pubsub_V1_PublisherListTopicSubscriptionsSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_PublisherListTopicSubscriptionsSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_ListTopicSubscriptionsRequest, Google_Pubsub_V1_ListTopicSubscriptionsResponse>, Google_Pubsub_V1_PublisherListTopicSubscriptionsSession {}

internal protocol Google_Pubsub_V1_PublisherListTopicSnapshotsSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_PublisherListTopicSnapshotsSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_ListTopicSnapshotsRequest, Google_Pubsub_V1_ListTopicSnapshotsResponse>, Google_Pubsub_V1_PublisherListTopicSnapshotsSession {}

internal protocol Google_Pubsub_V1_PublisherDeleteTopicSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_PublisherDeleteTopicSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_DeleteTopicRequest, SwiftProtobuf.Google_Protobuf_Empty>, Google_Pubsub_V1_PublisherDeleteTopicSession {}

/// To build a server, implement a class that conforms to this protocol.
/// If one of the methods returning `ServerStatus?` returns nil,
/// it is expected that you have already returned a status to the client by means of `session.close`.
internal protocol Google_Pubsub_V1_SubscriberProvider: ServiceProvider {
  func createSubscription(request: Google_Pubsub_V1_Subscription, session: Google_Pubsub_V1_SubscriberCreateSubscriptionSession) throws -> Google_Pubsub_V1_Subscription
  func getSubscription(request: Google_Pubsub_V1_GetSubscriptionRequest, session: Google_Pubsub_V1_SubscriberGetSubscriptionSession) throws -> Google_Pubsub_V1_Subscription
  func updateSubscription(request: Google_Pubsub_V1_UpdateSubscriptionRequest, session: Google_Pubsub_V1_SubscriberUpdateSubscriptionSession) throws -> Google_Pubsub_V1_Subscription
  func listSubscriptions(request: Google_Pubsub_V1_ListSubscriptionsRequest, session: Google_Pubsub_V1_SubscriberListSubscriptionsSession) throws -> Google_Pubsub_V1_ListSubscriptionsResponse
  func deleteSubscription(request: Google_Pubsub_V1_DeleteSubscriptionRequest, session: Google_Pubsub_V1_SubscriberDeleteSubscriptionSession) throws -> SwiftProtobuf.Google_Protobuf_Empty
  func modifyAckDeadline(request: Google_Pubsub_V1_ModifyAckDeadlineRequest, session: Google_Pubsub_V1_SubscriberModifyAckDeadlineSession) throws -> SwiftProtobuf.Google_Protobuf_Empty
  func acknowledge(request: Google_Pubsub_V1_AcknowledgeRequest, session: Google_Pubsub_V1_SubscriberAcknowledgeSession) throws -> SwiftProtobuf.Google_Protobuf_Empty
  func pull(request: Google_Pubsub_V1_PullRequest, session: Google_Pubsub_V1_SubscriberPullSession) throws -> Google_Pubsub_V1_PullResponse
  func streamingPull(session: Google_Pubsub_V1_SubscriberStreamingPullSession) throws -> ServerStatus?
  func modifyPushConfig(request: Google_Pubsub_V1_ModifyPushConfigRequest, session: Google_Pubsub_V1_SubscriberModifyPushConfigSession) throws -> SwiftProtobuf.Google_Protobuf_Empty
  func getSnapshot(request: Google_Pubsub_V1_GetSnapshotRequest, session: Google_Pubsub_V1_SubscriberGetSnapshotSession) throws -> Google_Pubsub_V1_Snapshot
  func listSnapshots(request: Google_Pubsub_V1_ListSnapshotsRequest, session: Google_Pubsub_V1_SubscriberListSnapshotsSession) throws -> Google_Pubsub_V1_ListSnapshotsResponse
  func createSnapshot(request: Google_Pubsub_V1_CreateSnapshotRequest, session: Google_Pubsub_V1_SubscriberCreateSnapshotSession) throws -> Google_Pubsub_V1_Snapshot
  func updateSnapshot(request: Google_Pubsub_V1_UpdateSnapshotRequest, session: Google_Pubsub_V1_SubscriberUpdateSnapshotSession) throws -> Google_Pubsub_V1_Snapshot
  func deleteSnapshot(request: Google_Pubsub_V1_DeleteSnapshotRequest, session: Google_Pubsub_V1_SubscriberDeleteSnapshotSession) throws -> SwiftProtobuf.Google_Protobuf_Empty
  func seek(request: Google_Pubsub_V1_SeekRequest, session: Google_Pubsub_V1_SubscriberSeekSession) throws -> Google_Pubsub_V1_SeekResponse
}

extension Google_Pubsub_V1_SubscriberProvider {
  internal var serviceName: String { return "google.pubsub.v1.Subscriber" }

  /// Determines and calls the appropriate request handler, depending on the request's method.
  /// Throws `HandleMethodError.unknownMethod` for methods not handled by this service.
  internal func handleMethod(_ method: String, handler: Handler) throws -> ServerStatus? {
    switch method {
    case "/google.pubsub.v1.Subscriber/CreateSubscription":
      return try Google_Pubsub_V1_SubscriberCreateSubscriptionSessionBase(
        handler: handler,
        providerBlock: { try self.createSubscription(request: $0, session: $1 as! Google_Pubsub_V1_SubscriberCreateSubscriptionSessionBase) })
          .run()
    case "/google.pubsub.v1.Subscriber/GetSubscription":
      return try Google_Pubsub_V1_SubscriberGetSubscriptionSessionBase(
        handler: handler,
        providerBlock: { try self.getSubscription(request: $0, session: $1 as! Google_Pubsub_V1_SubscriberGetSubscriptionSessionBase) })
          .run()
    case "/google.pubsub.v1.Subscriber/UpdateSubscription":
      return try Google_Pubsub_V1_SubscriberUpdateSubscriptionSessionBase(
        handler: handler,
        providerBlock: { try self.updateSubscription(request: $0, session: $1 as! Google_Pubsub_V1_SubscriberUpdateSubscriptionSessionBase) })
          .run()
    case "/google.pubsub.v1.Subscriber/ListSubscriptions":
      return try Google_Pubsub_V1_SubscriberListSubscriptionsSessionBase(
        handler: handler,
        providerBlock: { try self.listSubscriptions(request: $0, session: $1 as! Google_Pubsub_V1_SubscriberListSubscriptionsSessionBase) })
          .run()
    case "/google.pubsub.v1.Subscriber/DeleteSubscription":
      return try Google_Pubsub_V1_SubscriberDeleteSubscriptionSessionBase(
        handler: handler,
        providerBlock: { try self.deleteSubscription(request: $0, session: $1 as! Google_Pubsub_V1_SubscriberDeleteSubscriptionSessionBase) })
          .run()
    case "/google.pubsub.v1.Subscriber/ModifyAckDeadline":
      return try Google_Pubsub_V1_SubscriberModifyAckDeadlineSessionBase(
        handler: handler,
        providerBlock: { try self.modifyAckDeadline(request: $0, session: $1 as! Google_Pubsub_V1_SubscriberModifyAckDeadlineSessionBase) })
          .run()
    case "/google.pubsub.v1.Subscriber/Acknowledge":
      return try Google_Pubsub_V1_SubscriberAcknowledgeSessionBase(
        handler: handler,
        providerBlock: { try self.acknowledge(request: $0, session: $1 as! Google_Pubsub_V1_SubscriberAcknowledgeSessionBase) })
          .run()
    case "/google.pubsub.v1.Subscriber/Pull":
      return try Google_Pubsub_V1_SubscriberPullSessionBase(
        handler: handler,
        providerBlock: { try self.pull(request: $0, session: $1 as! Google_Pubsub_V1_SubscriberPullSessionBase) })
          .run()
    case "/google.pubsub.v1.Subscriber/StreamingPull":
      return try Google_Pubsub_V1_SubscriberStreamingPullSessionBase(
        handler: handler,
        providerBlock: { try self.streamingPull(session: $0 as! Google_Pubsub_V1_SubscriberStreamingPullSessionBase) })
          .run()
    case "/google.pubsub.v1.Subscriber/ModifyPushConfig":
      return try Google_Pubsub_V1_SubscriberModifyPushConfigSessionBase(
        handler: handler,
        providerBlock: { try self.modifyPushConfig(request: $0, session: $1 as! Google_Pubsub_V1_SubscriberModifyPushConfigSessionBase) })
          .run()
    case "/google.pubsub.v1.Subscriber/GetSnapshot":
      return try Google_Pubsub_V1_SubscriberGetSnapshotSessionBase(
        handler: handler,
        providerBlock: { try self.getSnapshot(request: $0, session: $1 as! Google_Pubsub_V1_SubscriberGetSnapshotSessionBase) })
          .run()
    case "/google.pubsub.v1.Subscriber/ListSnapshots":
      return try Google_Pubsub_V1_SubscriberListSnapshotsSessionBase(
        handler: handler,
        providerBlock: { try self.listSnapshots(request: $0, session: $1 as! Google_Pubsub_V1_SubscriberListSnapshotsSessionBase) })
          .run()
    case "/google.pubsub.v1.Subscriber/CreateSnapshot":
      return try Google_Pubsub_V1_SubscriberCreateSnapshotSessionBase(
        handler: handler,
        providerBlock: { try self.createSnapshot(request: $0, session: $1 as! Google_Pubsub_V1_SubscriberCreateSnapshotSessionBase) })
          .run()
    case "/google.pubsub.v1.Subscriber/UpdateSnapshot":
      return try Google_Pubsub_V1_SubscriberUpdateSnapshotSessionBase(
        handler: handler,
        providerBlock: { try self.updateSnapshot(request: $0, session: $1 as! Google_Pubsub_V1_SubscriberUpdateSnapshotSessionBase) })
          .run()
    case "/google.pubsub.v1.Subscriber/DeleteSnapshot":
      return try Google_Pubsub_V1_SubscriberDeleteSnapshotSessionBase(
        handler: handler,
        providerBlock: { try self.deleteSnapshot(request: $0, session: $1 as! Google_Pubsub_V1_SubscriberDeleteSnapshotSessionBase) })
          .run()
    case "/google.pubsub.v1.Subscriber/Seek":
      return try Google_Pubsub_V1_SubscriberSeekSessionBase(
        handler: handler,
        providerBlock: { try self.seek(request: $0, session: $1 as! Google_Pubsub_V1_SubscriberSeekSessionBase) })
          .run()
    default:
      throw HandleMethodError.unknownMethod
    }
  }
}

internal protocol Google_Pubsub_V1_SubscriberCreateSubscriptionSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberCreateSubscriptionSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_Subscription, Google_Pubsub_V1_Subscription>, Google_Pubsub_V1_SubscriberCreateSubscriptionSession {}

internal protocol Google_Pubsub_V1_SubscriberGetSubscriptionSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberGetSubscriptionSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_GetSubscriptionRequest, Google_Pubsub_V1_Subscription>, Google_Pubsub_V1_SubscriberGetSubscriptionSession {}

internal protocol Google_Pubsub_V1_SubscriberUpdateSubscriptionSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberUpdateSubscriptionSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_UpdateSubscriptionRequest, Google_Pubsub_V1_Subscription>, Google_Pubsub_V1_SubscriberUpdateSubscriptionSession {}

internal protocol Google_Pubsub_V1_SubscriberListSubscriptionsSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberListSubscriptionsSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_ListSubscriptionsRequest, Google_Pubsub_V1_ListSubscriptionsResponse>, Google_Pubsub_V1_SubscriberListSubscriptionsSession {}

internal protocol Google_Pubsub_V1_SubscriberDeleteSubscriptionSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberDeleteSubscriptionSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_DeleteSubscriptionRequest, SwiftProtobuf.Google_Protobuf_Empty>, Google_Pubsub_V1_SubscriberDeleteSubscriptionSession {}

internal protocol Google_Pubsub_V1_SubscriberModifyAckDeadlineSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberModifyAckDeadlineSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_ModifyAckDeadlineRequest, SwiftProtobuf.Google_Protobuf_Empty>, Google_Pubsub_V1_SubscriberModifyAckDeadlineSession {}

internal protocol Google_Pubsub_V1_SubscriberAcknowledgeSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberAcknowledgeSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_AcknowledgeRequest, SwiftProtobuf.Google_Protobuf_Empty>, Google_Pubsub_V1_SubscriberAcknowledgeSession {}

internal protocol Google_Pubsub_V1_SubscriberPullSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberPullSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_PullRequest, Google_Pubsub_V1_PullResponse>, Google_Pubsub_V1_SubscriberPullSession {}

internal protocol Google_Pubsub_V1_SubscriberStreamingPullSession: ServerSessionBidirectionalStreaming {
  /// Do not call this directly, call `receive()` in the protocol extension below instead.
  func _receive(timeout: DispatchTime) throws -> Google_Pubsub_V1_StreamingPullRequest?
  /// Call this to wait for a result. Nonblocking.
  func receive(completion: @escaping (ResultOrRPCError<Google_Pubsub_V1_StreamingPullRequest?>) -> Void) throws

  /// Send a message to the stream. Nonblocking.
  func send(_ message: Google_Pubsub_V1_StreamingPullResponse, completion: @escaping (Error?) -> Void) throws
  /// Do not call this directly, call `send()` in the protocol extension below instead.
  func _send(_ message: Google_Pubsub_V1_StreamingPullResponse, timeout: DispatchTime) throws

  /// Close the connection and send the status. Non-blocking.
  /// This method should be called if and only if your request handler returns a nil value instead of a server status;
  /// otherwise SwiftGRPC will take care of sending the status for you.
  func close(withStatus status: ServerStatus, completion: (() -> Void)?) throws
}

internal extension Google_Pubsub_V1_SubscriberStreamingPullSession {
  /// Call this to wait for a result. Blocking.
  func receive(timeout: DispatchTime = .distantFuture) throws -> Google_Pubsub_V1_StreamingPullRequest? { return try self._receive(timeout: timeout) }
}

internal extension Google_Pubsub_V1_SubscriberStreamingPullSession {
  /// Send a message to the stream and wait for the send operation to finish. Blocking.
  func send(_ message: Google_Pubsub_V1_StreamingPullResponse, timeout: DispatchTime = .distantFuture) throws { try self._send(message, timeout: timeout) }
}

fileprivate final class Google_Pubsub_V1_SubscriberStreamingPullSessionBase: ServerSessionBidirectionalStreamingBase<Google_Pubsub_V1_StreamingPullRequest, Google_Pubsub_V1_StreamingPullResponse>, Google_Pubsub_V1_SubscriberStreamingPullSession {}

internal protocol Google_Pubsub_V1_SubscriberModifyPushConfigSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberModifyPushConfigSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_ModifyPushConfigRequest, SwiftProtobuf.Google_Protobuf_Empty>, Google_Pubsub_V1_SubscriberModifyPushConfigSession {}

internal protocol Google_Pubsub_V1_SubscriberGetSnapshotSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberGetSnapshotSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_GetSnapshotRequest, Google_Pubsub_V1_Snapshot>, Google_Pubsub_V1_SubscriberGetSnapshotSession {}

internal protocol Google_Pubsub_V1_SubscriberListSnapshotsSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberListSnapshotsSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_ListSnapshotsRequest, Google_Pubsub_V1_ListSnapshotsResponse>, Google_Pubsub_V1_SubscriberListSnapshotsSession {}

internal protocol Google_Pubsub_V1_SubscriberCreateSnapshotSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberCreateSnapshotSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_CreateSnapshotRequest, Google_Pubsub_V1_Snapshot>, Google_Pubsub_V1_SubscriberCreateSnapshotSession {}

internal protocol Google_Pubsub_V1_SubscriberUpdateSnapshotSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberUpdateSnapshotSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_UpdateSnapshotRequest, Google_Pubsub_V1_Snapshot>, Google_Pubsub_V1_SubscriberUpdateSnapshotSession {}

internal protocol Google_Pubsub_V1_SubscriberDeleteSnapshotSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberDeleteSnapshotSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_DeleteSnapshotRequest, SwiftProtobuf.Google_Protobuf_Empty>, Google_Pubsub_V1_SubscriberDeleteSnapshotSession {}

internal protocol Google_Pubsub_V1_SubscriberSeekSession: ServerSessionUnary {}

fileprivate final class Google_Pubsub_V1_SubscriberSeekSessionBase: ServerSessionUnaryBase<Google_Pubsub_V1_SeekRequest, Google_Pubsub_V1_SeekResponse>, Google_Pubsub_V1_SubscriberSeekSession {}

